BCC(BPF Compiler Collection)
===
bcc provides libbcc, libbpf liberary to support high level function
bcc-tools use bcc to support python, C, etc.. to trace system profile.
but bpftrace usually trace the kprobe to examine the issue.
bcc-tools can be isntalled in verious distrutions. which are python format
that encapsule libbpf.

for rhel:
After dnf install bcc-tools, all tools can be found in folder:
  /usr/share/bcc/tools/, bpftrace: /usr/share/bpftrace/tools/
for ubuntu:
After apt install bpfcc-tools, we can use bcc as:
Bcc: biosnoop-bpfcc // require python, bcc, inplace compiling
bpftrace: biosnoop.bt // require bcc, btf

detail:
  single functional:
  execsnoop: trace new process call exec() or process created.
  ext4slower/xfsslower: trace io slower than X ms
  runqlat: trace run queue latency
  runqlen/runqslower/cpufreq/cpudist
  smpcalls: remote cpu calls
  profile: sample at XX Hertz all hreads's stack
  funccount/stackcount: trace XX function called times or show stack
  offcputime: trace with stack when schedule
  softirqs: functions sorted by spend time when do softirq
  hardirqs: trace which net dev spend the most time
  llcstat: cpu cache miss hit
  filesystem:
  vfsstat: trace vfs read/write
  xfsdist: xfs latency histgram
  cachestat: get the ratio of cache hit
  filetop: get the frequentest file access
  I/O disk:
  biolatency: show disk latency as a histogram.
  biosnoop: catch all bios/requests include sector and size and latency
  scsilatency: for scsi device
  multiply functional:
  trace: support kprobes uprobe tracepoint and USDT, get the function args etc
   can use -I include the struct header
  kernel:
  kmem: show memory alloc times and size
  kpages: trace alloc_pages and alloc size
  memleak: trace memlink
  User:
   for userspace program, can use profile(8) to get uprobe point, and can use nm(1),
   objdump(1) or readelf(1) to check if have symbols and debug pack. default,
   kernel enable "CONFIG_FRAME_POINTER", so debug can easy get the backtrace.
   but for user, frame pointer always be cleared. after complied use strip(1) clear all of them.
   use "readelf -s bin" to get symbol ".symtab", which include all local symbol table.
   ".dynsym" is link library symbol. strip(1) clear "symtab" section.
   some C library, like libc include USDT(static trace point).
  threadsnoop: trace libpthread: pthread_create
  net:
  tcplife: trace tcp connect lifespan
  tcpdrop: trace tcp drop
  tcpconnect: trace each time tcp connect
  tcpretans: trace each time tcp retansmission

